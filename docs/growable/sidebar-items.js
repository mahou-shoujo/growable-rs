initSidebarItems({"fn":[["replace","Replaces the value, dropping the old one but not the memory associated with it."]],"struct":[["Growable","A chunk of the heap memory that can be assigned with an arbitrary type."],["GrowablePool","A pool of [`Growable`] objects. Unlike a typical Arena-based allocator it probably will not be able to decrease a memory fragmentation or provide some strong guarantees about frequency of allocations in your code but instead can be used to reduce the total amount of allocations in an amortized way by reusing the same memory to store different objects."],["GrowablePoolBuilder","A customizable [`GrowablePool`] builder."],["Reusable","A reusable box. It behaves just like the default [`Box`] (and it WILL free memory on drop) but it is also possible to free it manually, fetching a [`Growable`] back."]]});